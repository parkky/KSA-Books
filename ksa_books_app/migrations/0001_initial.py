# Generated by Django 3.1.3 on 2020-11-25 23:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('student_id', models.CharField(help_text='00-000', max_length=10, unique=True, verbose_name='학번')),
                ('name', models.CharField(max_length=100, verbose_name='이름')),
                ('email', models.EmailField(default='<django.db.models.fields.CharField>@ksa.hs.kr', max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('unread_notification', models.PositiveIntegerField(default=0)),
                ('notify_comment', models.BooleanField(default=True, verbose_name='댓글이 달림')),
                ('notify_new_offer', models.BooleanField(default=True, verbose_name='원하는 책이 올라옴')),
                ('notify_sold_to_user', models.BooleanField(default=True, verbose_name='자신에게 책을 판매함')),
                ('notify_sold_to_other', models.BooleanField(default=True, verbose_name='다른 사람에게 책을 판매함')),
                ('notify_new_want', models.BooleanField(default=True, verbose_name='새 구매 신청')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='제목')),
                ('author', models.CharField(max_length=100, verbose_name='저자')),
                ('publisher', models.CharField(max_length=50, verbose_name='출판사')),
                ('isbn', models.CharField(help_text='13 Character <a href="https://www.isbn-international.org/content/what-isbn">ISBN number</a>', max_length=13, verbose_name='ISBN')),
                ('list_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='정가')),
                ('group_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='공동구매 가격')),
                ('using', models.BooleanField(verbose_name='사용 여부')),
            ],
            options={
                'ordering': ['subject'],
                'permissions': (('load_data', 'Can load data'),),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='교과명')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_done', models.BooleanField(default=False, null=True)),
                ('buyer_done', models.BooleanField(default=False, null=True)),
                ('price', models.PositiveIntegerField(verbose_name='판매 가격')),
                ('worn_degree', models.CharField(choices=[('a', '상'), ('b', '중'), ('c', '하')], max_length=1, verbose_name='낡은 정도')),
                ('worn_explain', models.TextField(blank=True, null=True, verbose_name='설명')),
                ('note_degree', models.CharField(choices=[('a', '상'), ('b', '중'), ('c', '하')], max_length=1, verbose_name='필기 정도')),
                ('note_explain', models.TextField(blank=True, null=True, verbose_name='설명')),
                ('other', models.TextField(blank=True, null=True, verbose_name='기타 내용')),
                ('date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ksa_books_app.book', verbose_name='책')),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_buyer', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_seller', to=settings.AUTH_USER_MODEL)),
                ('want_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('0', 'Comment'), ('1', 'New offer'), ('2', 'Sold to user'), ('3', 'Sold to other'), ('4', 'New want')], max_length=1, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('data_offer1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ksa_books_app.offer')),
                ('data_user1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_user1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='과목명')),
                ('open', models.BooleanField(verbose_name='수강 가능')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ksa_books_app.subject', verbose_name='교과')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret', models.BooleanField(null=True)),
                ('text', models.TextField(verbose_name='댓글')),
                ('date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, null=True)),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ksa_books_app.offer')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_time'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='courses',
            field=models.ManyToManyField(to='ksa_books_app.Course', verbose_name='과목'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ksa_books_app.subject', verbose_name='교과'),
        ),
        migrations.AddField(
            model_name='studentuser',
            name='notifications',
            field=models.ManyToManyField(to='ksa_books_app.Notification'),
        ),
        migrations.AddField(
            model_name='studentuser',
            name='notify_books',
            field=models.ManyToManyField(blank=True, to='ksa_books_app.Book', verbose_name='알림을 받을 책'),
        ),
        migrations.AddField(
            model_name='studentuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
